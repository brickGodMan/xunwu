# Mysql 注意替换相应配置
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/xunwu
spring.datasource.username=root
spring.datasource.password=qiancyroot

# redis config
#spring.redis.database=0
#spring.redis.host=192.168.132.128
#spring.redis.port=9001
#spring.redis.pool.min-idle=1
#spring.redis.timeout=3000
spring.redis.retry.num=10000
spring.redis.pool.max.active=200
spring.redis.pool.max.wait=10000
spring.redis.pool.max.idle=100
spring.redis.pool.min.idle=10
spring.redis.pool.timeout=10000
spring.redis.cluster.nodes=192.168.132.128:9001,192.168.132.128:9002,192.168.132.128:9003,192.168.132.128:9004,192.168.132.128:9005,192.168.132.128:9006


logging.level.org.hibernate.SQL=debug

# thymeleaf
spring.thymeleaf.cache=false

# multipart config
spring.http.multipart.enabled=true
spring.http.multipart.location=/tmp/xunwu/images/
spring.http.multipart.file-size-threshold=5MB
spring.http.multipart.max-request-size=20MB

# kafka
#spring.kafka.bootstrap-servers=127.0.0.1:9092
#spring.kafka.consumer.group-id=xunwu
#
#logging.level.com.qcy.service.search=debug
#
#elasticsearch.cluster.name=xunwu
#elasticsearch.host=127.0.0.1
#elasticsearch.port=9300

#TFS config
#http访问图片的url前缀，系统内部访问
tfs.req.url=http://192.168.132.131:7500/v1/tfs/
#系统前台使用
tfs.req.front=v1/tfs/
#version = 49
#整个进程中系统最多等待多少个请求,取决于你有多少个线程并发的请求TFS
tfs.client.maxWaitThread = 1000
#单个请求最大的等待时间(ms) 超过这个时间放弃这次请求
tfs.client.timeout = 5000
#Tfs master nameserver ip address
tfs.client.nsip = 192.168.132.131:8100
#TFS 集群的编号,这个编号只是一种参考,系统初始化的时候会从ns上取,取不到才用本地设置的
tfs.client.tfsClusterIndex = 1
#TFS在读取文件的时候会缓存block所在的数据服务器ip,这个参数配置了最多缓存的记录个数
tfs.client.maxCacheItemCount = 10000
#上一项缓存最大有效的时间(ms)
tfs.client.maxCacheTime = 5000
tfs.client.namespace = 100